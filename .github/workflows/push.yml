name: Github Actions
on: [ push ]
concurrency: ci-${{ github.ref }} # to avoid tag collisions in the ECR
env:
  # Name of the image in the ECR
  APP_IMAGE: keboola-component

jobs:
  build-java:
    runs-on: ubuntu-latest
    steps:

    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Java
      uses: actions/setup-java@v4
      with:
        distribution: 'adopt'  # Change this to your Java distribution
        java-version: '11'     # Change this to your Java version

    - name: Build Java Project
      run: |
        cd debezium_core
        mvn clean install

    - name: Upload JAR Artifact
      uses: actions/upload-artifact@v4
      with:
        name: java-artifact
        path: debezium_core/jars/kbcDebeziumEngine-jar-with-dependencies.jar

  build-python:
    runs-on: ubuntu-latest
    outputs:
      app_image_tag: ${{ steps.tag.outputs.app_image_tag }}
      is_semantic_tag: ${{ steps.tag.outputs.is_semantic_tag }}
    needs: build-java
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Download JAR Artifact
      uses: actions/download-artifact@v4
      with:
        name: java-artifact
        path: kbcDebeziumEngine-jar-with-dependencies.jar

    - name: Move JAR Artifact
      run: mv kbcDebeziumEngine-jar-with-dependencies.jar debezium_core/jars/kbcDebeziumEngine-jar-with-dependencies.jar

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install flake8

    - name: Docker login
      if: env.DOCKERHUB_TOKEN
      run: docker login --username "$DOCKERHUB_USER" --password "$DOCKERHUB_TOKEN"

    - name: Build image
      run: docker build -t ${{ secrets.APP_IMAGE }} -f db_components/postgre/Dockerfile .

    - name: Set image tag
      id: tag
      run: |
        TAG="${GITHUB_REF##*/}"
        IS_SEMANTIC_TAG=$(echo "$TAG" | grep -q '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$' && echo true || echo false)
        echo "Tag = '$TAG', is semantic tag = '$IS_SEMANTIC_TAG'"
        echo "is_semantic_tag=$IS_SEMANTIC_TAG" >> $GITHUB_OUTPUT
        echo "app_image_tag=$TAG" >> $GITHUB_OUTPUT

    - name: Push image to ECR
      uses: keboola/action-push-to-ecr@master
      with:
        vendor: ${{ secrets.KBC_DEVELOPERPORTAL_VENDOR }}
        app_id: ${{ secrets.KBC_DEVELOPERPORTAL_APP }}
        username: ${{ secrets.KBC_DEVELOPERPORTAL_USERNAME }}
        password: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}
        tag: ${{ steps.tag.outputs.app_image_tag }}
        push_latest: ${{ steps.tag.outputs.is_semantic_tag }}
        source_image: ${{ APP_IMAGE }}

  tests:
    needs: build-python
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Pull image from ECR
        uses: keboola/action-pull-from-ecr@master
        with:
          vendor: ${{ secrets.KBC_DEVELOPERPORTAL_VENDOR }}
          app_id: ${{ secrets.KBC_DEVELOPERPORTAL_APP }}
          username: ${{ secrets.KBC_DEVELOPERPORTAL_USERNAME }}
          password: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}
          tag: ${{ needs.build.outputs.app_image_tag }}
          target_image: ${{ APP_IMAGE}}
          tag_as_latest: true

      - name: Run tests
        run: |
          docker run ${{ APP_IMAGE }} flake8 . --config=/code/db_components/postgre/flake8.cfg
          echo "Running unit-tests..."
          docker run ${{ APP_IMAGE }} python -m unittest discover

  tests-in-kbc:
    needs: build-python
    runs-on: ubuntu-latest
    steps:
      -
        name: Run KBC test jobs
        if: env.KBC_STORAGE_TOKEN && env.KBC_TEST_PROJECT_CONFIGS
        uses: keboola/action-run-configs-parallel@master
        with:
          token: ${{ secrets.KBC_STORAGE_TOKEN }}
          componentId: ${{ secrets.KBC_DEVELOPERPORTAL_APP }}
          tag: ${{ needs.build.outputs.app_image_tag }}
          configs: ${{ env.KBC_TEST_PROJECT_CONFIGS }}

  deploy:
    needs:
      - build-python
      - tests
      - tests-in-kbc
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/') && needs.build.outputs.is_semantic_tag == 'true'
    steps:
      - name: Set tag in the Developer Portal
        uses: keboola/action-set-tag-developer-portal@master
        with:
          vendor: ${{ secrets.KBC_DEVELOPERPORTAL_VENDOR }}
          app_id: ${{ secrets.KBC_DEVELOPERPORTAL_APP }}
          username: ${{ secrets.KBC_DEVELOPERPORTAL_USERNAME }}
          password: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}
          tag: ${{ needs.build.outputs.app_image_tag }}

      - name: Set developer portal properties
        run: |
            chmod +x ./scripts/update_dev_portal_properties.sh
            ./scripts/update_dev_portal_properties.sh
