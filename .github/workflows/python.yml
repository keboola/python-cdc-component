on:
  workflow_call:
    inputs:
      APP_NAME:
        required: true
        type: string
jobs:
  build-python:
    runs-on: ubuntu-latest
    outputs:
      app_image_tag: ${{ steps.tag.outputs.app_image_tag }}
      is_semantic_tag: ${{ steps.tag.outputs.is_semantic_tag }}
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Download JAR Artifact
      uses: actions/download-artifact@v4
      with:
        name: java-artifact

    - name: Move JAR Artifact
      run: mv kbcDebeziumEngine-jar-with-dependencies.jar debezium_core/jars/kbcDebeziumEngine-jar-with-dependencies.jar

    - name: Docker login
      if: env.DOCKERHUB_TOKEN
      run: docker login --username "$DOCKERHUB_USER" --password "$DOCKERHUB_TOKEN"

    - name: Build image
      run: docker build -t ${{ env.APP_IMAGE }} -f db_components/${{ env.KBC_DEVELOPERPORTAL_VENDOR }}.${{ inputs.APP_NAME }}/Dockerfile .

    - name: Set image tag
      id: tag
      run: |
        TAG="${GITHUB_REF##*/}"
        IS_SEMANTIC_TAG=$(echo "$TAG" | grep -q '^v\?[0-9]\+\.[0-9]\+\.[0-9]\+$' && echo true || echo false)
        echo "Tag = '$TAG', is semantic tag = '$IS_SEMANTIC_TAG'"
        echo "is_semantic_tag=$IS_SEMANTIC_TAG" >> $GITHUB_OUTPUT
        echo "app_image_tag=$TAG" >> $GITHUB_OUTPUT

    - name: Push image to ECR
      uses: keboola/action-push-to-ecr@master
      with:
        vendor: ${{ env.KBC_DEVELOPERPORTAL_VENDOR }}
        app_id: {{ env.KBC_DEVELOPERPORTAL_VENDOR }}.${{ inputs.APP_NAME }}
        username: ${{ env.KBC_DEVELOPERPORTAL_USERNAME }}
        password: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}
        tag: ${{ steps.tag.outputs.app_image_tag }}
        push_latest: ${{ steps.tag.outputs.is_semantic_tag }}
        source_image: ${{ env.APP_IMAGE }}

  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Pull image from ECR
        uses: keboola/action-pull-from-ecr@master
        with:
          vendor: ${{ env.KBC_DEVELOPERPORTAL_VENDOR }}
          app_id: {{ env.KBC_DEVELOPERPORTAL_VENDOR }}.${{ inputs.APP_NAME }}
          username: ${{ env.KBC_DEVELOPERPORTAL_USERNAME }}
          password: ${{ secrets.KBC_DEVELOPERPORTAL_PASSWORD }}
          tag: ${{ needs.build-python.outputs.app_image_tag }}
          target_image: ${{ env.APP_IMAGE}}
          tag_as_latest: true

      - name: Run tests
        run: |
          docker run ${{ env.APP_IMAGE }} flake8 . --config=/code/db_components/${{ inputs.APP_NAME }}/flake8.cfg
          echo "Running unit-tests..."
          docker run ${{ env.APP_IMAGE }} python -m unittest discover

  tests-in-kbc:
    needs: build-python
    runs-on: ubuntu-latest
    steps:
      -
        name: Run KBC test jobs
        if: env.KBC_STORAGE_TOKEN && env.KBC_TEST_PROJECT_CONFIGS
        uses: keboola/action-run-configs-parallel@master
        with:
          token: ${{ secrets.KBC_STORAGE_TOKEN }}
          componentId: {{ env.KBC_DEVELOPERPORTAL_VENDOR }}.${{ inputs.APP_NAME }}
          tag: ${{ needs.build.outputs.app_image_tag }}
          configs: ${{ env.KBC_TEST_PROJECT_CONFIGS }}